{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@grafana/data\"","webpack:///external \"lodash\"","webpack:///external \"@grafana/runtime\"","webpack:///external \"jquery\"","webpack:///external \"@grafana/ui\"","webpack:///external \"app/plugins/sdk\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./util.ts","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","extendStatics","b","setPrototypeOf","__proto__","Array","__assign","assign","arguments","length","apply","this","__values","iterator","next","done","TypeError","getColorForValue","data","thresholds","colorMap","series","guessDefined","fields","field","type","other","map","$scope","$injector","linkSrv","$sanitize","useDataFrames","dataList","fontSizes","fieldNames","invalidGaugeRange","valueNameOptions","text","panelDefaults","links","datasource","maxDataPoints","interval","targets","cacheTimeout","format","prefix","postfix","nullText","valueMaps","op","mappingTypes","rangeMaps","from","to","mappingType","nullPointMode","valueName","prefixFontSize","valueFontSize","postfixFontSize","colorBackground","colorValue","colors","sparkline","show","full","ymin","ymax","lineColor","fillColor","gauge","minValue","maxValue","thresholdMarkers","thresholdLabels","tableColumn","panel","events","on","dataFramesReceived","onFramesReceived","dataSnapshotLoad","onSnapshotLoad","editModeInitialized","onInitEditMode","onSparklineColorChange","onSparklineFillChange","__","constructor","addEditorTab","setUnitFormat","unit","refresh","results","dataFrames","result","dataFrame","state","push","getProcessedDataFrames","frames","display","numeric","NaN","render","distinct","byName","names","frame","info","time","firstTimeField","f","first","config","displayName","getDistinctNames","fieldInfo","processField","processor","mappings","noValue","theme","timeZone","dashboard","getTimezone","calc","calcField","val","undefined","last","getIfExists","id","string","mean","sum","includes","lastNotNull","reducers","decimals","scopedVars","xField","yField","nullValueMode","canModifyText","setColoring","options","background","invertColorOrder","tmp","onColorChange","panelColorIndex","color","newColor","removeValueMap","index","splice","addValueMap","removeRangeMap","rangeMap","addRangeMap","link","scope","elem","attrs","ctrl","drilldownTooltip","$location","$timeout","templateSrv","linkInfo","getPanelContainer","closest","getSpan","className","fontSizePercent","applyColoring","valueString","replace","parseInt","getBigValueHtml","body","colorPrefix","colorPostfix","addGauge","width","height","dimension","Math","min","plotCanvas","plotCss","top","margin","position","css","bgColor","bootData","user","lightTheme","fontScale","fontSize","gaugeWidthReduceRatio","gaugeWidth","thresholdMarkersWidth","thresholdLabelFontSize","gauges","max","border","shadow","label","layout","thresholdWidth","cell","threshold","values","font","size","formatter","getValueText","family","typography","fontFamily","sansSerif","append","plotSeries","plot","addSparkline","setTimeout","left","dynamicHeightMargin","round","floor","legend","lines","fill","lineWidth","zero","yaxis","xaxis","range","valueOf","grid","hoverable","find","mouseleave","detach","click","evt","parents","target","href","indexOf","window","location","url","stripBaseFromUrl","open","mousemove","e","title","place_tt","pageX","pageY","split","strVale","Number","trim","fullscreen","html","toggleClass","getDataLinkUIModel","renderingCompleted","templateUrl"],"mappings":";wIACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFrDhC,EAAOD,QAAUkC,G,cCAjBjC,EAAOD,QAAUmC,G,cCAjBlC,EAAOD,QAAUoC,G,cCAjBnC,EAAOD,QAAUqC,G,cCAjBpC,EAAOD,QAAUsC,G,cCAjBrC,EAAOD,QAAUuC,G,oCCgBjB,IAAIC,EAAgB,SAAShC,EAAGiC,GAI5B,OAHAD,EAAgB5B,OAAO8B,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUpC,EAAGiC,GAAKjC,EAAEmC,UAAYF,IACvE,SAAUjC,EAAGiC,GAAK,IAAK,IAAIT,KAAKS,EAAOA,EAAEV,eAAeC,KAAIxB,EAAEwB,GAAKS,EAAET,MACpDxB,EAAGiC,IASrB,IAAII,EAAW,WAQlB,OAPAA,EAAWjC,OAAOkC,QAAU,SAAkB1B,GAC1C,IAAK,IAAIa,EAAG/B,EAAI,EAAGyB,EAAIoB,UAAUC,OAAQ9C,EAAIyB,EAAGzB,IAE5C,IAAK,IAAI8B,KADTC,EAAIc,UAAU7C,GACOU,OAAOkB,UAAUC,eAAe1B,KAAK4B,EAAGD,KAAIZ,EAAEY,GAAKC,EAAED,IAE9E,OAAOZ,IAEK6B,MAAMC,KAAMH,YA6EzB,SAASI,EAASxC,GACrB,IAAIsB,EAAsB,mBAAXhB,QAAyBA,OAAOmC,SAAU9C,EAAI2B,GAAKtB,EAAEsB,GAAI/B,EAAI,EAC5E,GAAII,EAAG,OAAOA,EAAED,KAAKM,GACrB,GAAIA,GAAyB,iBAAbA,EAAEqC,OAAqB,MAAO,CAC1CK,KAAM,WAEF,OADI1C,GAAKT,GAAKS,EAAEqC,SAAQrC,OAAI,GACrB,CAAEQ,MAAOR,GAAKA,EAAET,KAAMoD,MAAO3C,KAG5C,MAAM,IAAI4C,UAAUtB,EAAI,0BAA4B,mC,uDCxHlD,SAAUuB,EAAiBC,EAAWtC,GAC1C,IAAK,mBAASA,GACZ,OAAO,KAGT,IAAK,IAAIjB,EAAIuD,EAAKC,WAAWV,OAAQ9C,EAAI,EAAGA,IAC1C,GAAIiB,GAASsC,EAAKC,WAAWxD,EAAI,GAC/B,OAAOuD,EAAKE,SAASzD,GAIzB,OAAO,gBAAMuD,EAAKE,UAqCb,IAAM,EAAkB,SAACC,EAAmBC,G,aAAA,IAAAA,OAAA,G,IACjD,IAAoB,QAAAD,EAAOE,QAAM,8BAAE,CAA9B,IAAMC,EAAK,QACd,IAAKA,EAAMC,MAAQD,EAAMC,OAAS,YAAUC,OAASJ,EAEnD,cACKD,GAAM,CACTE,OAAQF,EAAOE,OAAOI,KAAI,SAACH,GACzB,OAAIA,EAAMC,MAAQD,EAAMC,OAAS,YAAUC,QAAUJ,EAC5CE,EAGT,OACKA,GAAK,CACRC,KAAM,iCAAuBD,IAAU,YAAUE,c,iGAO3D,OAAOL,G,0ICrCT,IAcA,cA4EE,WAAYO,EAAaC,EAAwBC,EAAsBC,GAAvE,MACE,YAAMH,EAAQC,IAAU,K,OADuB,EAAAC,UAAsB,EAAAC,YAzEvE,EAAAC,eAAgB,EAChB,EAAAC,SAAwB,GAExB,EAAAf,KAA0B,GAE1B,EAAAgB,UAAmB,GACnB,EAAAC,WAAuB,GAEvB,EAAAC,mBAAoB,EAGpB,EAAAC,iBAA0B,CACxB,CAAEzD,MAAO,MAAO0D,KAAM,OACtB,CAAE1D,MAAO,MAAO0D,KAAM,OACtB,CAAE1D,MAAO,MAAO0D,KAAM,WACtB,CAAE1D,MAAO,UAAW0D,KAAM,WAC1B,CAAE1D,MAAO,QAAS0D,KAAM,SACxB,CAAE1D,MAAO,OAAQ0D,KAAM,QACvB,CAAE1D,MAAO,QAAS0D,KAAM,SACxB,CAAE1D,MAAO,QAAS0D,KAAM,SACxB,CAAE1D,MAAO,OAAQ0D,KAAM,cACvB,CAAE1D,MAAO,WAAY0D,KAAM,sBAC3B,CAAE1D,MAAO,QAAS0D,KAAM,SACxB,CAAE1D,MAAO,YAAa0D,KAAM,uBAI9B,EAAAC,cAAqB,CACnBC,MAAO,GACPC,WAAY,KACZC,cAAe,IACfC,SAAU,KACVC,QAAS,CAAC,IACVC,aAAc,KACdC,OAAQ,OACRC,OAAQ,GACRC,QAAS,GACTC,SAAU,KACVC,UAAW,CAAC,CAAEtE,MAAO,OAAQuE,GAAI,IAAKb,KAAM,QAC5Cc,aAAc,CACZ,CAAElF,KAAM,gBAAiBU,MAAO,GAChC,CAAEV,KAAM,gBAAiBU,MAAO,IAElCyE,UAAW,CAAC,CAAEC,KAAM,OAAQC,GAAI,OAAQjB,KAAM,QAC9CkB,YAAa,EACbC,cAAe,YACfC,UAAW,MACXC,eAAgB,MAChBC,cAAe,MACfC,gBAAiB,MACjB1C,WAAY,GACZ2C,iBAAiB,EACjBC,YAAY,EACZC,OAAQ,CAAC,UAAW,2BAA4B,WAChDC,UAAW,CACTC,MAAM,EACNC,MAAM,EACNC,KAAM,KACNC,KAAM,KACNC,UAAW,oBACXC,UAAW,4BAEbC,MAAO,CACLN,MAAM,EACNO,SAAU,EACVC,SAAU,IACVC,kBAAkB,EAClBC,iBAAiB,GAEnBC,YAAa,IAMb,mBAAS,EAAKC,MAAO,EAAKvC,eAE1B,EAAKwC,OAAOC,GAAG,cAAYC,mBAAoB,EAAKC,iBAAiB/F,KAAK,IAC1E,EAAK4F,OAAOC,GAAG,cAAYG,iBAAkB,EAAKC,eAAejG,KAAK,IACtE,EAAK4F,OAAOC,GAAG,cAAYK,oBAAqB,EAAKC,eAAenG,KAAK,IAEzE,EAAKoG,uBAAyB,EAAKA,uBAAuBpG,KAAK,GAC/D,EAAKqG,sBAAwB,EAAKA,sBAAsBrG,KAAK,G,EAoiBjE,OAznBA,uDFzBO,SAAmBlB,EAAGiC,GAEzB,SAASuF,IAAO9E,KAAK+E,YAAczH,EADnCgC,EAAchC,EAAGiC,GAEjBjC,EAAEsB,UAAkB,OAANW,EAAa7B,OAAOY,OAAOiB,IAAMuF,EAAGlG,UAAYW,EAAEX,UAAW,IAAIkG,GEsBtD,MAwF3B,YAAAH,eAAA,WACE3E,KAAKuB,UAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAC7FvB,KAAKgF,aAAa,UAAW,sDAAuD,GACpFhF,KAAKgF,aAAa,iBAAkB,wDAAyD,IAG/F,YAAAC,cAAA,sBACE,OAAO,SAACC,GACN,EAAKf,MAAMhC,OAAS+C,EACpB,EAAKC,YAIT,YAAAV,eAAA,SAAenD,GACbtB,KAAKuE,iBDhIH,SAAiCa,G,YACrC,IAAKA,IAAY,kBAAQA,GACvB,MAAO,GAGT,IAAMC,EAA0B,G,IAEhC,IAAqB,QAAAD,GAAO,8BAAE,CAAzB,IAAME,EAAM,QACTC,EAAY,EAAgB,sBAAYD,IAE9C,GAAIC,EAAU3E,QAAU2E,EAAU3E,OAAOd,O,IAEvC,IAAoB,kBAAAyF,EAAU3E,SAAM,8BAAE,CAAtB,QACR4E,MAAQ,M,iGAIlBH,EAAWI,KAAKF,I,iGAGlB,OAAOF,EC4GiBK,CAAuBpE,KAG/C,YAAAiD,iBAAA,SAAiBoB,GACP,IAAAxB,EAAUnE,KAAL,MAGb,GAFAA,KAAKsB,SAAWqE,EAEZA,GAAUA,EAAO7F,OAAS,EAS5B,OARAE,KAAKO,KAAO,CACVtC,MAAO,EACP2H,QAAS,CACPjE,KAAM,4DACNkE,QAASC,WAGb9F,KAAK+F,SAIP,IAAMC,EAwhBV,SAA0BzF,G,YAClByF,EAA+B,CACnCC,OAAQ,GACRC,MAAO,I,IAET,IAAoB,QAAA3F,GAAI,8BAAE,CAArB,IAAM4F,EAAK,QACRC,EAAkB,CAAED,MAAK,G,IAC/B,IAAoB,kBAAAA,EAAMvF,SAAM,8BAAE,CAA7B,IAAMC,EAAK,QACd,GAAIA,EAAMC,OAAS,YAAUuF,KACtBD,EAAKE,iBACRF,EAAKE,eAAiBzF,OAEnB,CACL,IAAM0F,EAAI,CAAE1F,MAAK,EAAEsF,MAAOC,GACrBJ,EAASQ,QACZR,EAASQ,MAAQD,GAEnB,IAAIrI,EAAI2C,EAAM4F,OAAOC,YACjBxI,IAAM8H,EAASC,OAAO/H,KACxB8H,EAASC,OAAO/H,GAAKqI,EACrBP,EAASE,MAAMT,KAAKvH,KAEtBA,EAAI2C,EAAMtD,QACAyI,EAASC,OAAO/H,KACxB8H,EAASC,OAAO/H,GAAKqI,EACrBP,EAASE,MAAMT,KAAKvH,M,oMAK5B,OAAO8H,EAtjBYW,CAAiBhB,GAC9BiB,EAAmCZ,EAASC,OAAO9B,EAAMD,aAQ7D,GANAlE,KAAKwB,WAAawE,EAASE,MAEtBU,IACHA,EAAYZ,EAASQ,OAGlBI,EAiBH5G,KAAKO,KAAOP,KAAK6G,aAAaD,OAjBhB,CACd,IAAME,EAAY,8BAAoB,CACpCjG,MAAO,CACL4F,OAAQ,CACNM,SAAU,wCAA8B/G,KAAKmE,OAC7C6C,QAAS,YAGbC,MAAO,SAAOA,MACdC,SAAUlH,KAAKmH,UAAUC,gBAG3BpH,KAAKO,KAAO,CACVtC,MAAO,KACP2H,QAASkB,EAAU,OAMvB9G,KAAK+F,UAGP,YAAAc,aAAA,SAAaD,GACL,IAAEzC,EAAqBnE,KAAhB,MAAEmH,EAAcnH,KAAL,UAElBzC,EAAO,8BAAoBqJ,EAAU/F,MAAO+F,EAAUT,MAAMA,MAAOnG,KAAKsB,UAC1E+F,EAAOlD,EAAMpB,UACbuE,EAAYV,EAAU/F,MACtB0G,OAAWC,EAEf,GAAI,SAAWH,EACbE,EAAMhK,MACD,CACD,cAAgB8J,GACdT,EAAUT,MAAMG,iBAClBgB,EAAYV,EAAUT,MAAMG,eAC5Be,EAAO,YAAUI,MAKrB,IAAM3J,EAAI,gBAAc4J,YAAYL,GACpC,GAAIvJ,GAGF,GAFAuJ,EAAOvJ,EAAE6J,GAELL,EAAUxG,OAAS,YAAU8G,OACjB,CAAC,YAAUC,KAAM,YAAUC,KAC/BC,SAASV,KACjBA,EAAOlD,EAAMpB,UAAY,YAAUyD,YAIvCa,EAAO,YAAUW,YAInBT,EAAM,sBAAY,CAChB1G,MAAOyG,EACPW,SAAU,CAACZ,KACVA,GAGL,IAAMP,EAAY,8BAAoB,CACpCjG,MAAO,EAAF,KACA+F,EAAU/F,OAAK,CAClB4F,OAAQ,EAAF,KACDG,EAAU/F,MAAM4F,QAAM,CACzBvB,KAAMf,EAAMhC,OACZ+F,SAAU/D,EAAM+D,SAChBnB,SAAU,wCAA8B5C,OAG5C8C,MAAO,SAAOA,MACdC,SAAUC,EAAUC,gBAIhB7G,EAAO,CACXM,MAAO+F,EAAU/F,MACjB5C,MAAOsJ,EACP3B,QAASkB,EAAUS,GACnBY,WAAY,iBAAO,GAAIhE,EAAMgE,YAC7B7E,UANuB,IAqBzB,OAZA/C,EAAK4H,WAAL,OAA4B,CAAElK,MAAOV,GACrC4G,EAAMD,YAAclE,KAAKwB,WAAW1B,OAAS,EAAIvC,EAAO,GAGpD4G,EAAMb,WAAaa,EAAMb,UAAUC,MAAQqD,EAAUT,MAAMG,iBAC7D/F,EAAK+C,UAAY,uBAAa,CAC5B8E,OAAQxB,EAAUT,MAAMG,eACxB+B,OAAQzB,EAAU/F,MAClByH,cAAenE,EAAMrB,iBAIlBvC,GAGT,YAAAgI,cAAA,WACE,OAAQvI,KAAKmE,MAAMN,MAAMN,MAG3B,YAAAiF,YAAA,SAAYC,GACNA,EAAQC,YACV1I,KAAKmE,MAAMf,YAAa,EACxBpD,KAAKmE,MAAMd,OAAS,CAAC,yBAA0B,2BAA4B,6BAE3ErD,KAAKmE,MAAMhB,iBAAkB,EAC7BnD,KAAKmE,MAAMd,OAAS,CAAC,0BAA2B,2BAA4B,2BAE9ErD,KAAK+F,UAGP,YAAA4C,iBAAA,WACE,IAAMC,EAAM5I,KAAKmE,MAAMd,OAAO,GAC9BrD,KAAKmE,MAAMd,OAAO,GAAKrD,KAAKmE,MAAMd,OAAO,GACzCrD,KAAKmE,MAAMd,OAAO,GAAKuF,EACvB5I,KAAK+F,UAGP,YAAA8C,cAAA,SAAcC,GAAd,WACE,OAAO,SAACC,GACN,EAAK5E,MAAMd,OAAOyF,GAAmBC,EACrC,EAAKhD,WAIT,YAAAnB,uBAAA,SAAuBoE,GACrBhJ,KAAKmE,MAAMb,UAAUK,UAAYqF,EACjChJ,KAAK+F,UAGP,YAAAlB,sBAAA,SAAsBmE,GACpBhJ,KAAKmE,MAAMb,UAAUM,UAAYoF,EACjChJ,KAAK+F,UAGP,YAAAkD,eAAA,SAAejI,GACb,IAAMkI,EAAQ,kBAAQlJ,KAAKmE,MAAM5B,UAAWvB,GAC5ChB,KAAKmE,MAAM5B,UAAU4G,OAAOD,EAAO,GACnClJ,KAAK+F,UAGP,YAAAqD,YAAA,WACEpJ,KAAKmE,MAAM5B,UAAUkD,KAAK,CAAExH,MAAO,GAAIuE,GAAI,IAAKb,KAAM,MAGxD,YAAA0H,eAAA,SAAeC,GACb,IAAMJ,EAAQ,kBAAQlJ,KAAKmE,MAAMzB,UAAW4G,GAC5CtJ,KAAKmE,MAAMzB,UAAUyG,OAAOD,EAAO,GACnClJ,KAAK+F,UAGP,YAAAwD,YAAA,WACEvJ,KAAKmE,MAAMzB,UAAU+C,KAAK,CAAE9C,KAAM,GAAIC,GAAI,GAAIjB,KAAM,MAGtD,YAAA6H,KAAA,SAAKC,EAAYC,EAAWC,EAAYC,GACtC,IAiSQC,EAjSFC,EAAa9J,KAAa8J,UAC1B3I,EAAUnB,KAAKmB,QACf4I,EAAW/J,KAAK+J,SAChB3I,EAAYpB,KAAKoB,UACjB+C,EAAQyF,EAAKzF,MACb6F,EAAchK,KAAKgK,YACrBC,EAAkC,KAGtC,SAASC,IACP,OAAOR,EAAKS,QAAQ,oBAatB,SAASC,EAAQC,EAAmBC,EAAyBC,EAAoBtM,GAVjF,IAAiCuM,EACzBjK,EACAwI,EAYN,OAHA9K,EAAQmD,EAAU4I,EAAYS,QAAQxM,EAAO2L,EAAKrJ,KAAK4H,aACvDlK,EAAQsM,GAZuBC,EAYiBvM,EAX1CsC,EAAOqJ,EAAKrJ,MACZwI,EAAQzI,EAAiBC,EAAMA,EAAKtC,QAEjC,sBAAwB8K,EAAQ,KAAOyB,EAAc,UAGvDA,GAKkDvM,EAElD,gBAAkBoM,EAAY,sBADlBK,SAASJ,EAAiB,IAAM,IA3UlC,GA4UwD,OAASrM,EAAQ,UAG5F,SAAS0M,IACP,IAAMpK,EAAiBqJ,EAAKrJ,KACxBqK,EAAO,iDAmBX,OAjBIzG,EAAM/B,SACRwI,GAAQR,EAAQ,0BAA2BjG,EAAMnB,eAAgBmB,EAAM0G,YAAa1G,EAAM/B,SAG5FwI,GAAQR,EACN,yBACAjG,EAAMlB,cACNkB,EAAMf,WACN,iCAAuB7C,EAAKqF,UAG1BzB,EAAM9B,UACRuI,GAAQR,EAAQ,2BAA4BjG,EAAMjB,gBAAiBiB,EAAM2G,aAAc3G,EAAM9B,UAG/FuI,GAAQ,SAcV,SAASG,IACP,IAAMxK,EAAiBqJ,EAAKrJ,KACtByK,EAAQtB,EAAKsB,SAAW,GACxBC,EAASvB,EAAKuB,UAAY,GAG1BC,EAAYC,KAAKC,IAAIJ,EAAgB,IAATC,GAGlC,GADArB,EAAKnI,mBAAoB,EACrB0C,EAAMN,MAAMC,SAAWK,EAAMN,MAAME,SACrC6F,EAAKnI,mBAAoB,MAD3B,CAKA,IAAM4J,EAAa,IAAE,eACfC,EAAU,CACdC,IAAK,MACLC,OAAQ,OACRC,SAAU,WACVR,OAAiB,GAATA,EAAe,KACvBD,MAAOE,EAAY,MAGrBG,EAAWK,IAAIJ,GAIf,IAFA,IAAM9K,EAAoB,GAEjBxD,EAAI,EAAGA,EAAIuD,EAAKC,WAAWV,OAAQ9C,IAC1CwD,EAAWiF,KAAK,CACdxH,MAAOsC,EAAKC,WAAWxD,GACvB+L,MAAOxI,EAAKE,SAASzD,KAGzBwD,EAAWiF,KAAK,CACdxH,MAAOkG,EAAMN,MAAME,SACnBgF,MAAOxI,EAAKE,SAASF,EAAKE,SAASX,OAAS,KAG9C,IAAM6L,EAAU,SAAOC,SAASC,KAAKC,WAAa,mBAAqB,gBAEjEC,EAAYrB,SAASvG,EAAMlB,cAAe,IAAM,IAChD+I,EAAWb,KAAKC,IAAIF,EAAY,EAAG,KAAOa,EAE1CE,EAAwB9H,EAAMN,MAAMI,gBAAkB,IAAM,EAC5DiI,EAAaf,KAAKC,IAAIF,EAAY,EAAG,IAAMe,EAC3CE,EAAwBD,EAAa,EACrCE,EAAyBJ,EAAW,IAEpCvD,EAAe,CACnB/H,OAAQ,CACN2L,OAAQ,CACNxI,MAAO,CACLuH,IAAKjH,EAAMN,MAAMC,SACjBwI,IAAKnI,EAAMN,MAAME,SACjB2E,WAAY,CAAEK,MAAO4C,GACrBY,OAAQ,CAAExD,MAAO,MACjByD,OAAQ,CAAEjJ,MAAM,GAChByH,MAAOkB,GAET/F,MAAO,CAAE5C,MAAM,GACfkJ,MAAO,CAAElJ,MAAM,GACfmJ,OAAQ,CAAElB,OAAQ,EAAGmB,eAAgB,GACrCC,KAAM,CAAEL,OAAQ,CAAEvB,MAAO,IACzB6B,UAAW,CACTC,OAAQtM,EACRiM,MAAO,CACLlJ,KAAMY,EAAMN,MAAMI,gBAClBuH,OAAQW,EAAwB,EAChCY,KAAM,CAAEC,KAAMZ,IAEhB7I,KAAMY,EAAMN,MAAMG,iBAClBgH,MAAOmB,GAETlO,MAAO,CACL8K,MAAO5E,EAAMf,WAAa9C,EAAiBC,EAAMA,EAAKqF,QAAQC,SAAW,KACzEoH,UAAW,WACT,OArFZ,WACE,IAAM1M,EAAiBqJ,EAAKrJ,KACxB+E,EAASnB,EAAM/B,OAAS4H,EAAYS,QAAQtG,EAAM/B,OAAQ7B,EAAK4H,YAAc,GAIjF,OAHA7C,GAAU,iCAAuB/E,EAAKqF,SACtCN,GAAUnB,EAAM9B,QAAU2H,EAAYS,QAAQtG,EAAM9B,QAAS9B,EAAK4H,YAAc,GAiF/D+E,IAETH,KAAM,CACJC,KAAMhB,EACNmB,OAAQ,SAAOlG,MAAMmG,WAAWC,WAAWC,YAG/C/J,MAAM,KAKZmG,EAAK6D,OAAOlC,GAEZ,IAAMmC,EAAa,CACjBjN,KAAM,CAAC,CAAC,EAAGA,EAAKtC,SAGlB,IAAEwP,KAAKpC,EAAY,CAACmC,GAAa/E,IAGnC,SAASiF,IACP,IAAMnN,EAAiBqJ,EAAKrJ,KACtByK,EAAQtB,EAAKsB,SAAW,GAE9B,GAAIA,GAASA,EAAQ,GAGnB2C,WAAWD,EAAc,SAI3B,GAAKnN,EAAK+C,WAAc/C,EAAK+C,UAAUxD,OAAvC,CAKA,IAAMmL,EAASrB,EAAKqB,OACdI,EAAa,IAAE,eACfC,EAAe,CACrB,SAAmB,WACnB,OAAiB,OAEjB,GAAInH,EAAMb,UAAUE,KAAM,CACxB8H,EAAQsC,KAAO,MACftC,EAAQN,MAAQA,EAAQ,KACxB,IAAM6C,EAAsB5C,GAAU,IAAM,EAA+B,GAA3BE,KAAK2C,MAAM7C,EAAS,KAAY,EAChFK,EAAQL,OAASA,EAAS4C,EAAsB,UAEhDvC,EAAQsC,KAAO,MACftC,EAAQN,MAAQA,EAAQ,KACxBM,EAAQL,OAASE,KAAK4C,MAAe,IAAT9C,GAAiB,KAG/CI,EAAWK,IAAIJ,GAEf,IAAM7C,EAAU,CACduF,OAAQ,CAAEzK,MAAM,GAChB7C,OAAQ,CACNuN,MAAO,CACL1K,MAAM,EACN2K,KAAM,EACNC,UAAW,EACXvK,UAAW,2BAAiBO,EAAMb,UAAUM,UAAW,SAAOqD,OAC9DmH,MAAM,IAGVC,MAAO,CACL9K,MAAM,EACN6H,IAAKjH,EAAMb,UAAUG,KACrB6I,IAAKnI,EAAMb,UAAUI,MAEvB4K,MAAO,CACL/K,MAAM,EACNpF,KAAM,OACNiN,IAAKxB,EAAK2E,MAAM5L,KAAK6L,UACrBlC,IAAK1C,EAAK2E,MAAM3L,GAAG4L,WAErBC,KAAM,CAAEC,WAAW,EAAOnL,MAAM,IAGlCmG,EAAK6D,OAAOlC,GAEZ,IAAMmC,EAAa,CACjBjN,KAAMA,EAAK+C,UACXyF,MAAO,2BAAiB5E,EAAMb,UAAUK,UAAW,SAAOsD,QAG5D,IAAEwG,KAAKpC,EAAY,CAACmC,GAAa/E,IA5NnCiB,EAAOA,EAAKiF,KAAK,qBA0RT9E,EAAmB,IAAE,2CAE3BH,EAAKkF,YAAW,WACa,IAAvBzK,EAAMtC,MAAM/B,QAGhBiK,GAAS,WACPF,EAAiBgF,eAIrBnF,EAAKoF,OAAM,SAACC,GACL9E,IAID,IAAE8E,GAAKC,QAAQ,iBAAiBlP,OAAS,IAIrB,WAApBmK,EAASgF,QAKyB,IAAlChF,EAASiF,KAAKC,QAAQ,QACxBC,OAAOC,SAASH,KAAOjF,EAASiF,KAEhCnF,GAAS,WACPD,EAAUwF,IAAI,eAAaC,iBAAiBtF,EAAUiF,UAI1DrF,EAAiBgF,UAZfO,OAAOI,KAAKvF,EAASiF,KAAM,eAe/BxF,EAAK+F,WAAU,SAACC,GACTzF,IAILJ,EAAiBlI,KAAK,mBAAqBsI,EAAS0F,OACpD9F,EAAiB+F,SAASF,EAAEG,MAAOH,EAAEI,MAAQ,QAMjD9P,KAAKoE,OAAOC,GAAG,cAAY0B,QAAQ,YA3GnC,WACE,GAAK6D,EAAKrJ,KAAV,CAGQ,IAAAA,EAAgBqJ,EAAZ,KAAEzF,EAAUyF,EAAL,MAGnBrJ,EAAKC,WAAa2D,EAAM3D,WACpB2D,EAAM3D,WAAWuP,MAAM,KAAK/O,KAAI,SAACgP,GAC/B,OAAOC,OAAOD,EAAQE,WAExB,GAGA/L,EAAMd,SACR9C,EAAKE,SAAW0D,EAAMd,OAAOrC,KAAI,SAAC+H,GAAkB,kCAAiBA,EAAO,SAAxB,WAGtD,IAAM6B,EAAOzG,EAAMN,MAAMN,KAAO,GAAKoH,IAErC,GAAIxG,EAAMhB,gBAAiB,CACzB,IAAM4F,EAAQzI,EAAiBC,EAAMA,EAAKqF,QAAQC,SAC9CkD,GACFmB,IAAoBwB,IAAI,mBAAoB3C,GACxCU,EAAM0G,WACRzG,EAAKgC,IAAI,mBAAoB3C,GAE7BW,EAAKgC,IAAI,mBAAoB,MAG/BxB,IAAoBwB,IAAI,mBAAoB,IAC5ChC,EAAKgC,IAAI,mBAAoB,UAG/BxB,IAAoBwB,IAAI,mBAAoB,IAC5ChC,EAAKgC,IAAI,mBAAoB,IAG/BhC,EAAK0G,KAAKxF,GAENzG,EAAMb,UAAUC,MAClBmK,IAGEvJ,EAAMN,MAAMN,MACdwH,IAGFrB,EAAK2G,YAAY,UAAWlM,EAAMtC,MAAM/B,OAAS,GAG/CmK,EADE9F,EAAMtC,MAAM/B,OAAS,EACZqB,EAAQmP,mBAAmBnM,EAAMtC,MAAM,GAAItB,EAAK4H,WAAY,IAE5D,MAuDbpC,GACA6D,EAAK2G,yBArnBF,EAAAC,YAAc,cAwnBvB,EAznBA,CAA6B","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { DataFrame, DataQueryResponseData, FieldType, guessFieldTypeForField, toDataFrame } from '@grafana/data';\nimport { isArray, isFinite, first } from 'lodash';\n\nexport function getColorForValue(data: any, value: number) {\n  if (!isFinite(value)) {\n    return null;\n  }\n\n  for (let i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i - 1]) {\n      return data.colorMap[i];\n    }\n  }\n\n  return first(data.colorMap);\n}\n\n/**\n * All panels will be passed tables that have our best guess at column type set\n *\n * This is also used by PanelChrome for snapshot support\n */\nexport function getProcessedDataFrames(results?: DataQueryResponseData[]): DataFrame[] {\n  if (!results || !isArray(results)) {\n    return [];\n  }\n\n  const dataFrames: DataFrame[] = [];\n\n  for (const result of results) {\n    const dataFrame = guessFieldTypes(toDataFrame(result));\n\n    if (dataFrame.fields && dataFrame.fields.length) {\n      // clear out the cached info\n      for (const field of dataFrame.fields) {\n        field.state = null;\n      }\n    }\n\n    dataFrames.push(dataFrame);\n  }\n\n  return dataFrames;\n}\n\n/**\n * @returns A copy of the series with the best guess for each field type.\n * If the series already has field types defined, they will be used, unless `guessDefined` is true.\n * @param series The DataFrame whose field's types should be guessed\n * @param guessDefined Whether to guess types of fields with already defined types\n */\nexport const guessFieldTypes = (series: DataFrame, guessDefined = false): DataFrame => {\n  for (const field of series.fields) {\n    if (!field.type || field.type === FieldType.other || guessDefined) {\n      // Something is missing a type, return a modified copy\n      return {\n        ...series,\n        fields: series.fields.map((field) => {\n          if (field.type && field.type !== FieldType.other && !guessDefined) {\n            return field;\n          }\n          // Calculate a reasonable schema value\n          return {\n            ...field,\n            type: guessFieldTypeForField(field) || FieldType.other,\n          };\n        }),\n      };\n    }\n  }\n  // No changes necessary\n  return series;\n};\n","import $ from 'jquery';\n// These are already imported (may change in the future!)\n// import 'jquery.flot';\n// import 'jquery.flot.gauge';\n\nimport { defaults, extend, indexOf } from 'lodash';\n\nimport {\n  DataFrame,\n  DisplayValue,\n  Field,\n  fieldReducers,\n  FieldType,\n  GraphSeriesValue,\n  KeyValue,\n  LinkModel,\n  reduceField,\n  ReducerID,\n  LegacyResponseData,\n  getFlotPairs,\n  getDisplayProcessor,\n  PanelEvents,\n  formattedValueToString,\n  locationUtil,\n  getFieldDisplayName,\n  getColorForTheme,\n} from '@grafana/data';\n\nimport { convertOldAngularValueMapping } from '@grafana/ui';\nimport { config } from '@grafana/runtime';\n\nimport { MetricsPanelCtrl } from 'grafana/app/plugins/sdk';\nimport { getProcessedDataFrames, getColorForValue } from './util';\n\nconst BASE_FONT_SIZE = 38;\n\nexport interface ShowData {\n  field: Field;\n  value: any;\n  sparkline: GraphSeriesValue[][];\n  display: DisplayValue;\n\n  scopedVars: any;\n\n  thresholds: any[];\n  colorMap: any;\n}\n\nclass SingleStatCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  useDataFrames = true;\n  dataList: DataFrame[] = [];\n\n  data: Partial<ShowData> = {};\n\n  fontSizes: any[] = [];\n  fieldNames: string[] = [];\n\n  invalidGaugeRange = false;\n  panel: any;\n  events: any;\n  valueNameOptions: any[] = [\n    { value: 'min', text: 'Min' },\n    { value: 'max', text: 'Max' },\n    { value: 'avg', text: 'Average' },\n    { value: 'current', text: 'Current' },\n    { value: 'total', text: 'Total' },\n    { value: 'name', text: 'Name' },\n    { value: 'first', text: 'First' },\n    { value: 'delta', text: 'Delta' },\n    { value: 'diff', text: 'Difference' },\n    { value: 'diffperc', text: 'Difference percent' },\n    { value: 'range', text: 'Range' },\n    { value: 'last_time', text: 'Time of last point' },\n  ];\n\n  // Set and populate defaults\n  panelDefaults: any = {\n    links: [],\n    datasource: null,\n    maxDataPoints: 100,\n    interval: null,\n    targets: [{}],\n    cacheTimeout: null,\n    format: 'none',\n    prefix: '',\n    postfix: '',\n    nullText: null,\n    valueMaps: [{ value: 'null', op: '=', text: 'N/A' }],\n    mappingTypes: [\n      { name: 'value to text', value: 1 },\n      { name: 'range to text', value: 2 },\n    ],\n    rangeMaps: [{ from: 'null', to: 'null', text: 'N/A' }],\n    mappingType: 1,\n    nullPointMode: 'connected',\n    valueName: 'avg',\n    prefixFontSize: '50%',\n    valueFontSize: '80%',\n    postfixFontSize: '50%',\n    thresholds: '',\n    colorBackground: false,\n    colorValue: false,\n    colors: ['#299c46', 'rgba(237, 129, 40, 0.89)', '#d44a3a'],\n    sparkline: {\n      show: false,\n      full: false,\n      ymin: null,\n      ymax: null,\n      lineColor: 'rgb(31, 120, 193)',\n      fillColor: 'rgba(31, 118, 189, 0.18)',\n    },\n    gauge: {\n      show: false,\n      minValue: 0,\n      maxValue: 100,\n      thresholdMarkers: true,\n      thresholdLabels: false,\n    },\n    tableColumn: '',\n  };\n\n  /** @ngInject */\n  constructor($scope: any, $injector: any, private linkSrv: any, private $sanitize: any) {\n    super($scope, $injector);\n    defaults(this.panel, this.panelDefaults);\n\n    this.events.on(PanelEvents.dataFramesReceived, this.onFramesReceived.bind(this));\n    this.events.on(PanelEvents.dataSnapshotLoad, this.onSnapshotLoad.bind(this));\n    this.events.on(PanelEvents.editModeInitialized, this.onInitEditMode.bind(this));\n\n    this.onSparklineColorChange = this.onSparklineColorChange.bind(this);\n    this.onSparklineFillChange = this.onSparklineFillChange.bind(this);\n  }\n\n  onInitEditMode() {\n    this.fontSizes = ['20%', '30%', '50%', '70%', '80%', '100%', '110%', '120%', '150%', '170%', '200%'];\n    this.addEditorTab('Options', 'public/plugins/grafana-singlestat-panel/editor.html', 2);\n    this.addEditorTab('Value Mappings', 'public/plugins/grafana-singlestat-panel/mappings.html', 3);\n  }\n\n  setUnitFormat() {\n    return (unit: string) => {\n      this.panel.format = unit;\n      this.refresh();\n    };\n  }\n\n  onSnapshotLoad(dataList: LegacyResponseData[]) {\n    this.onFramesReceived(getProcessedDataFrames(dataList));\n  }\n\n  onFramesReceived(frames: DataFrame[]) {\n    const { panel } = this;\n    this.dataList = frames;\n\n    if (frames && frames.length > 1) {\n      this.data = {\n        value: 0,\n        display: {\n          text: 'Only queries that return single series/table is supported',\n          numeric: NaN,\n        },\n      };\n      this.render();\n      return;\n    }\n\n    const distinct = getDistinctNames(frames);\n    let fieldInfo: FieldInfo | undefined = distinct.byName[panel.tableColumn];\n\n    this.fieldNames = distinct.names;\n\n    if (!fieldInfo) {\n      fieldInfo = distinct.first;\n    }\n\n    if (!fieldInfo) {\n      const processor = getDisplayProcessor({\n        field: {\n          config: {\n            mappings: convertOldAngularValueMapping(this.panel),\n            noValue: 'No Data',\n          },\n        },\n        theme: config.theme,\n        timeZone: this.dashboard.getTimezone(),\n      });\n      // When we don't have any field\n      this.data = {\n        value: null,\n        display: processor(null),\n      };\n    } else {\n      this.data = this.processField(fieldInfo);\n    }\n\n    this.render();\n  }\n\n  processField(fieldInfo: FieldInfo) {\n    const { panel, dashboard } = this;\n\n    const name = getFieldDisplayName(fieldInfo.field, fieldInfo.frame.frame, this.dataList as DataFrame[]);\n    let calc = panel.valueName;\n    let calcField = fieldInfo.field;\n    let val: any = undefined;\n\n    if ('name' === calc) {\n      val = name;\n    } else {\n      if ('last_time' === calc) {\n        if (fieldInfo.frame.firstTimeField) {\n          calcField = fieldInfo.frame.firstTimeField;\n          calc = ReducerID.last;\n        }\n      }\n\n      // Normalize functions (avg -> mean, etc)\n      const r = fieldReducers.getIfExists(calc);\n      if (r) {\n        calc = r.id;\n        // With strings, don't accidentally use a math function\n        if (calcField.type === FieldType.string) {\n          const avoid = [ReducerID.mean, ReducerID.sum];\n          if (avoid.includes(calc)) {\n            calc = panel.valueName = ReducerID.first;\n          }\n        }\n      } else {\n        calc = ReducerID.lastNotNull;\n      }\n\n      // Calculate the value\n      val = reduceField({\n        field: calcField,\n        reducers: [calc],\n      })[calc];\n    }\n\n    const processor = getDisplayProcessor({\n      field: {\n        ...fieldInfo.field,\n        config: {\n          ...fieldInfo.field.config,\n          unit: panel.format,\n          decimals: panel.decimals,\n          mappings: convertOldAngularValueMapping(panel),\n        },\n      },\n      theme: config.theme,\n      timeZone: dashboard.getTimezone(),\n    });\n\n    const sparkline: any[] = [];\n    const data = {\n      field: fieldInfo.field,\n      value: val,\n      display: processor(val),\n      scopedVars: extend({}, panel.scopedVars),\n      sparkline,\n    };\n\n    data.scopedVars['__name'] = { value: name };\n    panel.tableColumn = this.fieldNames.length > 1 ? name : '';\n\n    // Get the fields for a sparkline\n    if (panel.sparkline && panel.sparkline.show && fieldInfo.frame.firstTimeField) {\n      data.sparkline = getFlotPairs({\n        xField: fieldInfo.frame.firstTimeField,\n        yField: fieldInfo.field,\n        nullValueMode: panel.nullPointMode,\n      });\n    }\n\n    return data;\n  }\n\n  canModifyText() {\n    return !this.panel.gauge.show;\n  }\n\n  setColoring(options: { background: any }) {\n    if (options.background) {\n      this.panel.colorValue = false;\n      this.panel.colors = ['rgba(71, 212, 59, 0.4)', 'rgba(245, 150, 40, 0.73)', 'rgba(225, 40, 40, 0.59)'];\n    } else {\n      this.panel.colorBackground = false;\n      this.panel.colors = ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'];\n    }\n    this.render();\n  }\n\n  invertColorOrder() {\n    const tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n\n  onColorChange(panelColorIndex: number) {\n    return (color: string) => {\n      this.panel.colors[panelColorIndex] = color;\n      this.render();\n    };\n  }\n\n  onSparklineColorChange(newColor: string) {\n    this.panel.sparkline.lineColor = newColor;\n    this.render();\n  }\n\n  onSparklineFillChange(newColor: string) {\n    this.panel.sparkline.fillColor = newColor;\n    this.render();\n  }\n\n  removeValueMap(map: any) {\n    const index = indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({ value: '', op: '=', text: '' });\n  }\n\n  removeRangeMap(rangeMap: any) {\n    const index = indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({ from: '', to: '', text: '' });\n  }\n\n  link(scope: any, elem: any, attrs: any, ctrl: any) {\n    const $location = (this as any).$location;\n    const linkSrv = this.linkSrv;\n    const $timeout = this.$timeout;\n    const $sanitize = this.$sanitize;\n    const panel = ctrl.panel;\n    const templateSrv = this.templateSrv;\n    let linkInfo: LinkModel<any> | null = null;\n    elem = elem.find('.singlestat-panel');\n\n    function getPanelContainer() {\n      return elem.closest('.panel-container');\n    }\n\n    function applyColoringThresholds(valueString: string) {\n      const data = ctrl.data;\n      const color = getColorForValue(data, data.value);\n      if (color) {\n        return '<span style=\"color:' + color + '\">' + valueString + '</span>';\n      }\n\n      return valueString;\n    }\n\n    function getSpan(className: string, fontSizePercent: string, applyColoring: any, value: string) {\n      value = $sanitize(templateSrv.replace(value, ctrl.data.scopedVars));\n      value = applyColoring ? applyColoringThresholds(value) : value;\n      const pixelSize = (parseInt(fontSizePercent, 10) / 100) * BASE_FONT_SIZE;\n      return '<span class=\"' + className + '\" style=\"font-size:' + pixelSize + 'px\">' + value + '</span>';\n    }\n\n    function getBigValueHtml() {\n      const data: ShowData = ctrl.data;\n      let body = '<div class=\"singlestat-panel-value-container\">';\n\n      if (panel.prefix) {\n        body += getSpan('singlestat-panel-prefix', panel.prefixFontSize, panel.colorPrefix, panel.prefix);\n      }\n\n      body += getSpan(\n        'singlestat-panel-value',\n        panel.valueFontSize,\n        panel.colorValue,\n        formattedValueToString(data.display)\n      );\n\n      if (panel.postfix) {\n        body += getSpan('singlestat-panel-postfix', panel.postfixFontSize, panel.colorPostfix, panel.postfix);\n      }\n\n      body += '</div>';\n\n      return body;\n    }\n\n    function getValueText() {\n      const data: ShowData = ctrl.data;\n      let result = panel.prefix ? templateSrv.replace(panel.prefix, data.scopedVars) : '';\n      result += formattedValueToString(data.display);\n      result += panel.postfix ? templateSrv.replace(panel.postfix, data.scopedVars) : '';\n\n      return result;\n    }\n\n    function addGauge() {\n      const data: ShowData = ctrl.data;\n      const width = elem.width() || 10;\n      const height = elem.height() || 10;\n\n      // Allow to use a bit more space for wide gauges\n      const dimension = Math.min(width, height * 1.3);\n\n      ctrl.invalidGaugeRange = false;\n      if (panel.gauge.minValue > panel.gauge.maxValue) {\n        ctrl.invalidGaugeRange = true;\n        return;\n      }\n\n      const plotCanvas = $('<div></div>');\n      const plotCss = {\n        top: '5px',\n        margin: 'auto',\n        position: 'relative',\n        height: height * 0.9 + 'px',\n        width: dimension + 'px',\n      };\n\n      plotCanvas.css(plotCss);\n\n      const thresholds: any[] = [];\n\n      for (let i = 0; i < data.thresholds.length; i++) {\n        thresholds.push({\n          value: data.thresholds[i],\n          color: data.colorMap[i],\n        });\n      }\n      thresholds.push({\n        value: panel.gauge.maxValue,\n        color: data.colorMap[data.colorMap.length - 1],\n      });\n\n      const bgColor = config.bootData.user.lightTheme ? 'rgb(230,230,230)' : 'rgb(38,38,38)';\n\n      const fontScale = parseInt(panel.valueFontSize, 10) / 100;\n      const fontSize = Math.min(dimension / 5, 100) * fontScale;\n      // Reduce gauge width if threshold labels enabled\n      const gaugeWidthReduceRatio = panel.gauge.thresholdLabels ? 1.5 : 1;\n      const gaugeWidth = Math.min(dimension / 6, 60) / gaugeWidthReduceRatio;\n      const thresholdMarkersWidth = gaugeWidth / 5;\n      const thresholdLabelFontSize = fontSize / 2.5;\n\n      const options: any = {\n        series: {\n          gauges: {\n            gauge: {\n              min: panel.gauge.minValue,\n              max: panel.gauge.maxValue,\n              background: { color: bgColor },\n              border: { color: null },\n              shadow: { show: false },\n              width: gaugeWidth,\n            },\n            frame: { show: false },\n            label: { show: false },\n            layout: { margin: 0, thresholdWidth: 0 },\n            cell: { border: { width: 0 } },\n            threshold: {\n              values: thresholds,\n              label: {\n                show: panel.gauge.thresholdLabels,\n                margin: thresholdMarkersWidth + 1,\n                font: { size: thresholdLabelFontSize },\n              },\n              show: panel.gauge.thresholdMarkers,\n              width: thresholdMarkersWidth,\n            },\n            value: {\n              color: panel.colorValue ? getColorForValue(data, data.display.numeric) : null,\n              formatter: () => {\n                return getValueText();\n              },\n              font: {\n                size: fontSize,\n                family: config.theme.typography.fontFamily.sansSerif,\n              },\n            },\n            show: true,\n          },\n        },\n      };\n\n      elem.append(plotCanvas);\n\n      const plotSeries = {\n        data: [[0, data.value]],\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function addSparkline() {\n      const data: ShowData = ctrl.data;\n      const width = elem.width() || 30;\n\n      if (width && width < 30) {\n        // element has not gotten it's width yet\n        // delay sparkline render\n        setTimeout(addSparkline, 30);\n        return;\n      }\n\n      if (!data.sparkline || !data.sparkline.length) {\n        // no sparkline data\n        return;\n      }\n\n      const height = ctrl.height;\n      const plotCanvas = $('<div></div>');\n      const plotCss: any = {};\n      plotCss.position = 'absolute';\n      plotCss.bottom = '0px';\n\n      if (panel.sparkline.full) {\n        plotCss.left = '0px';\n        plotCss.width = width + 'px';\n        const dynamicHeightMargin = height <= 100 ? 5 : Math.round(height / 100) * 15 + 5;\n        plotCss.height = height - dynamicHeightMargin + 'px';\n      } else {\n        plotCss.left = '0px';\n        plotCss.width = width + 'px';\n        plotCss.height = Math.floor(height * 0.25) + 'px';\n      }\n\n      plotCanvas.css(plotCss);\n\n      const options = {\n        legend: { show: false },\n        series: {\n          lines: {\n            show: true,\n            fill: 1,\n            lineWidth: 1,\n            fillColor: getColorForTheme(panel.sparkline.fillColor, config.theme),\n            zero: false,\n          },\n        },\n        yaxis: {\n          show: false,\n          min: panel.sparkline.ymin,\n          max: panel.sparkline.ymax,\n        },\n        xaxis: {\n          show: false,\n          mode: 'time',\n          min: ctrl.range.from.valueOf(),\n          max: ctrl.range.to.valueOf(),\n        },\n        grid: { hoverable: false, show: false },\n      };\n\n      elem.append(plotCanvas);\n\n      const plotSeries = {\n        data: data.sparkline,\n        color: getColorForTheme(panel.sparkline.lineColor, config.theme),\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function render() {\n      if (!ctrl.data) {\n        return;\n      }\n      const { data, panel } = ctrl;\n\n      // get thresholds\n      data.thresholds = panel.thresholds\n        ? panel.thresholds.split(',').map((strVale: string) => {\n            return Number(strVale.trim());\n          })\n        : [];\n\n      // Map panel colors to hex or rgb/a values\n      if (panel.colors) {\n        data.colorMap = panel.colors.map((color: string) => getColorForTheme(color, config.theme));\n      }\n\n      const body = panel.gauge.show ? '' : getBigValueHtml();\n\n      if (panel.colorBackground) {\n        const color = getColorForValue(data, data.display.numeric);\n        if (color) {\n          getPanelContainer().css('background-color', color);\n          if (scope.fullscreen) {\n            elem.css('background-color', color);\n          } else {\n            elem.css('background-color', '');\n          }\n        } else {\n          getPanelContainer().css('background-color', '');\n          elem.css('background-color', '');\n        }\n      } else {\n        getPanelContainer().css('background-color', '');\n        elem.css('background-color', '');\n      }\n\n      elem.html(body);\n\n      if (panel.sparkline.show) {\n        addSparkline();\n      }\n\n      if (panel.gauge.show) {\n        addGauge();\n      }\n\n      elem.toggleClass('pointer', panel.links.length > 0);\n\n      if (panel.links.length > 0) {\n        linkInfo = linkSrv.getDataLinkUIModel(panel.links[0], data.scopedVars, {});\n      } else {\n        linkInfo = null;\n      }\n    }\n\n    function hookupDrilldownLinkTooltip() {\n      // drilldown link tooltip\n      const drilldownTooltip = $('<div id=\"tooltip\" class=\"\">hello</div>\"');\n\n      elem.mouseleave(() => {\n        if (panel.links.length === 0) {\n          return;\n        }\n        $timeout(() => {\n          drilldownTooltip.detach();\n        });\n      });\n\n      elem.click((evt) => {\n        if (!linkInfo) {\n          return;\n        }\n        // ignore title clicks in title\n        if ($(evt).parents('.panel-header').length > 0) {\n          return;\n        }\n\n        if (linkInfo.target === '_blank') {\n          window.open(linkInfo.href, '_blank');\n          return;\n        }\n\n        if (linkInfo.href.indexOf('http') === 0) {\n          window.location.href = linkInfo.href;\n        } else {\n          $timeout(() => {\n            $location.url(locationUtil.stripBaseFromUrl(linkInfo!.href));\n          });\n        }\n\n        drilldownTooltip.detach();\n      });\n\n      elem.mousemove((e) => {\n        if (!linkInfo) {\n          return;\n        }\n\n        drilldownTooltip.text('click to go to: ' + linkInfo.title);\n        drilldownTooltip.place_tt(e.pageX, e.pageY - 50);\n      });\n    }\n\n    hookupDrilldownLinkTooltip();\n\n    this.events.on(PanelEvents.render, () => {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\n//------------------------------------------------\n// Private utility functions\n// Something like this should be available in a\n//  DataFrame[] abstraction helper\n//------------------------------------------------\n\ninterface FrameInfo {\n  firstTimeField?: Field;\n  frame: DataFrame;\n}\n\ninterface FieldInfo {\n  field: Field;\n  frame: FrameInfo;\n}\n\ninterface DistinctFieldsInfo {\n  first?: FieldInfo;\n  byName: KeyValue<FieldInfo>;\n  names: string[];\n}\n\nfunction getDistinctNames(data: DataFrame[]): DistinctFieldsInfo {\n  const distinct: DistinctFieldsInfo = {\n    byName: {},\n    names: [],\n  };\n  for (const frame of data) {\n    const info: FrameInfo = { frame };\n    for (const field of frame.fields) {\n      if (field.type === FieldType.time) {\n        if (!info.firstTimeField) {\n          info.firstTimeField = field;\n        }\n      } else {\n        const f = { field, frame: info };\n        if (!distinct.first) {\n          distinct.first = f;\n        }\n        let t = field.config.displayName;\n        if (t && !distinct.byName[t]) {\n          distinct.byName[t] = f;\n          distinct.names.push(t);\n        }\n        t = field.name;\n        if (t && !distinct.byName[t]) {\n          distinct.byName[t] = f;\n          distinct.names.push(t);\n        }\n      }\n    }\n  }\n  return distinct;\n}\n\nexport { SingleStatCtrl, SingleStatCtrl as PanelCtrl, getColorForValue };\n"],"sourceRoot":""}